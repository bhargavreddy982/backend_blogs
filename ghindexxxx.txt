const express=require('express');
const app=express();
const cors=require('cors');
const User=require('./models/User');
const bcrypt = require('bcryptjs');
const  salt=bcrypt.genSaltSync(10);
const mongoose=require('mongoose');
const jwt=require('jsonwebtoken');
const secret='hjdsjkjdskasdf';
const cookieParser=require('cookie-parser')

//GIhBxmdyQuS4jAwY

//EdshS6mvI0MF1k0z
//mongodb+srv://blog:<password>@cluster0.b9in0pl.mongodb.net/?retryWrites=true&w=majority

//mongodb+srv://bhargavreddyg20:GIhBxmdyQuS4jAwY@cluster0.dvcgdca.mongodb.net/?retryWrites=true&w=majority

  app.use(cors({credentials:true,origin:'http://localhost:3000'}));
  app.use(express.json());

  //cookie parser middleware

  app.use(cookieParser());

  // mongoose.connect('mongodb+srv://bhargavreddyg20:GIhBxmdyQuS4jAwY@cluster0.dvcgdca.mongodb.net/?retryWrites=true&w=majority')
  mongoose.connect('mongodb+srv://blog:<password>@cluster0.b9in0pl.mongodb.net/?retryWrites=true&w=majority', {
  useNewUrlParser: true,
  useUnifiedTopology: true,
  serverSelectionTimeoutMS: 30000, // Increase timeout to 30 seconds
});
 



app.post('/register', async (req,res)=>{
    const {username,password}=req.body;

    try{
      const userDoc= await User.create({
        username,
        password:bcrypt.hashSync(password,salt),
      });

      res.json(userDoc);

    }catch(e){
      console.log(e);
      res.status(400).json(e);

    }

   

 

});

app.post('/login', async (req,res)=>{
  const{username,password}=req.body;
  const userDoc= await User.findOne({username});
 const passOk = bcrypt.compareSync(password,userDoc.password);
  if(passOk){
    //loggedin
   jwt.sign({username,id:userDoc._id},secret,{},(err,token)=>{
if(err) throw err;
res.cookie('token',token).json('ok');
   });
    //res.json
  }else{
    res.status(400).json('wron credentials')
  }
});

app.get('/profile',(req,res)=>{
  const {token}=req.cookies;
  jwt.verify(token,secret,{},(err,info)=>{
    if(err) throw err;
    res.json(info);


  })
 
})



app.post('/logout' ,(req,res)=>{
  res.cookie('token','').json('ok');
})
app.listen(4000);